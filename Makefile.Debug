#############################################################################
# Makefile for building: qthyena
# Generated by qmake (2.01a) (Qt 4.7.0) on: Sun Jan 23 14:58:01 2011
# Project:  qthyena.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtOpenGL -I/usr/include/qt4 -I/usr/X11R6/include -Idebug -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib -L/usr/X11R6/lib -lQtOpenGL -lQtGui -lQtCore -lGLU -lGL -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/share/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = qthyena.cpp \
		environment.cpp \
		globals.cpp \
		indiv.cpp \
		main.cpp \
		node.cpp \
		pop.cpp \
		team.cpp \
		vect.cpp \
		glwidget.cpp \
		helper.cpp \
		widget.cpp \
		window.cpp debug/moc_qthyena.cpp \
		debug/moc_pop.cpp \
		debug/moc_helper.cpp \
		debug/moc_window.cpp \
		debug/moc_widget.cpp \
		debug/moc_glwidget.cpp
OBJECTS       = debug/qthyena.o \
		debug/environment.o \
		debug/globals.o \
		debug/indiv.o \
		debug/main.o \
		debug/node.o \
		debug/pop.o \
		debug/team.o \
		debug/vect.o \
		debug/glwidget.o \
		debug/helper.o \
		debug/widget.o \
		debug/window.o \
		debug/moc_qthyena.o \
		debug/moc_pop.o \
		debug/moc_helper.o \
		debug/moc_window.o \
		debug/moc_widget.o \
		debug/moc_glwidget.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/debug_and_release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/build_pass.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/opengl.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		qthyena.pro
QMAKE_TARGET  = qthyena
DESTDIR       = 
TARGET        = qthyena

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Debug $(TARGET)

$(TARGET): ui_qthyena.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake:  FORCE
	@$(QMAKE) CONFIG+=debug_and_release -o Makefile.Debug qthyena.pro

dist: 
	@$(CHK_DIR_EXISTS) debug/qthyena1.0.0 || $(MKDIR) debug/qthyena1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) debug/qthyena1.0.0/ && $(COPY_FILE) --parents qthyena.h globals.h environment.h node.h team.h vect.h qth.h indiv.h pop.h helper.h window.h widget.h glwidget.h debug/qthyena1.0.0/ && $(COPY_FILE) --parents qthyena.cpp environment.cpp globals.cpp indiv.cpp main.cpp node.cpp pop.cpp team.cpp vect.cpp glwidget.cpp helper.cpp widget.cpp window.cpp debug/qthyena1.0.0/ && $(COPY_FILE) --parents qthyena.ui debug/qthyena1.0.0/ && (cd `dirname debug/qthyena1.0.0` && $(TAR) qthyena1.0.0.tar qthyena1.0.0 && $(COMPRESS) qthyena1.0.0.tar) && $(MOVE) `dirname debug/qthyena1.0.0`/qthyena1.0.0.tar.gz . && $(DEL_FILE) -r debug/qthyena1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Debug


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_qthyena.cpp debug/moc_pop.cpp debug/moc_helper.cpp debug/moc_window.cpp debug/moc_widget.cpp debug/moc_glwidget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug/moc_qthyena.cpp debug/moc_pop.cpp debug/moc_helper.cpp debug/moc_window.cpp debug/moc_widget.cpp debug/moc_glwidget.cpp
debug/moc_qthyena.cpp: ui_qthyena.h \
		widget.h \
		helper.h \
		globals.h \
		vect.h \
		pop.h \
		indiv.h \
		window.h \
		node.h \
		team.h \
		environment.h \
		glwidget.h \
		qthyena.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) qthyena.h -o debug/moc_qthyena.cpp

debug/moc_pop.cpp: globals.h \
		vect.h \
		indiv.h \
		window.h \
		helper.h \
		node.h \
		team.h \
		environment.h \
		glwidget.h \
		pop.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) pop.h -o debug/moc_pop.cpp

debug/moc_helper.cpp: globals.h \
		vect.h \
		helper.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) helper.h -o debug/moc_helper.cpp

debug/moc_window.cpp: helper.h \
		globals.h \
		vect.h \
		window.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) window.h -o debug/moc_window.cpp

debug/moc_widget.cpp: helper.h \
		globals.h \
		vect.h \
		pop.h \
		indiv.h \
		window.h \
		node.h \
		team.h \
		environment.h \
		glwidget.h \
		widget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) widget.h -o debug/moc_widget.cpp

debug/moc_glwidget.cpp: glwidget.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) glwidget.h -o debug/moc_glwidget.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_qthyena.h
compiler_uic_clean:
	-$(DEL_FILE) ui_qthyena.h
ui_qthyena.h: qthyena.ui \
		widget.h \
		helper.h \
		globals.h \
		vect.h \
		pop.h \
		indiv.h \
		window.h \
		node.h \
		team.h \
		environment.h \
		glwidget.h
	/usr/bin/uic-qt4 qthyena.ui -o ui_qthyena.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

debug/qthyena.o: qthyena.cpp qthyena.h \
		ui_qthyena.h \
		widget.h \
		helper.h \
		globals.h \
		vect.h \
		pop.h \
		indiv.h \
		window.h \
		node.h \
		team.h \
		environment.h \
		glwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/qthyena.o qthyena.cpp

debug/environment.o: environment.cpp environment.h \
		glwidget.h \
		team.h \
		globals.h \
		vect.h \
		indiv.h \
		window.h \
		helper.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/environment.o environment.cpp

debug/globals.o: globals.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/globals.o globals.cpp

debug/indiv.o: indiv.cpp indiv.h \
		window.h \
		helper.h \
		globals.h \
		vect.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/indiv.o indiv.cpp

debug/main.o: main.cpp window.h \
		helper.h \
		globals.h \
		vect.h \
		qthyena.h \
		ui_qthyena.h \
		widget.h \
		pop.h \
		indiv.h \
		node.h \
		team.h \
		environment.h \
		glwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/main.o main.cpp

debug/node.o: node.cpp node.h \
		globals.h \
		vect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/node.o node.cpp

debug/pop.o: pop.cpp pop.h \
		globals.h \
		vect.h \
		indiv.h \
		window.h \
		helper.h \
		node.h \
		team.h \
		environment.h \
		glwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/pop.o pop.cpp

debug/team.o: team.cpp team.h \
		globals.h \
		vect.h \
		indiv.h \
		window.h \
		helper.h \
		node.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/team.o team.cpp

debug/vect.o: vect.cpp vect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/vect.o vect.cpp

debug/glwidget.o: glwidget.cpp glwidget.h \
		helper.h \
		globals.h \
		vect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/glwidget.o glwidget.cpp

debug/helper.o: helper.cpp helper.h \
		globals.h \
		vect.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/helper.o helper.cpp

debug/widget.o: widget.cpp widget.h \
		helper.h \
		globals.h \
		vect.h \
		pop.h \
		indiv.h \
		window.h \
		node.h \
		team.h \
		environment.h \
		glwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/widget.o widget.cpp

debug/window.o: window.cpp glwidget.h \
		widget.h \
		helper.h \
		globals.h \
		vect.h \
		pop.h \
		indiv.h \
		window.h \
		node.h \
		team.h \
		environment.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/window.o window.cpp

debug/moc_qthyena.o: debug/moc_qthyena.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_qthyena.o debug/moc_qthyena.cpp

debug/moc_pop.o: debug/moc_pop.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_pop.o debug/moc_pop.cpp

debug/moc_helper.o: debug/moc_helper.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_helper.o debug/moc_helper.cpp

debug/moc_window.o: debug/moc_window.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_window.o debug/moc_window.cpp

debug/moc_widget.o: debug/moc_widget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_widget.o debug/moc_widget.cpp

debug/moc_glwidget.o: debug/moc_glwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug/moc_glwidget.o debug/moc_glwidget.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

